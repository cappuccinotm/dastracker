// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package provider

import (
	"context"
	"sync"

	"github.com/cappuccinotm/dastracker/app/store"
)

// Ensure, that InterfaceMock does implement Interface.
// If this is not the case, regenerate this file with moq.
var _ Interface = &InterfaceMock{}

// InterfaceMock is a mock implementation of Interface.
//
//     func TestSomethingThatUsesInterface(t *testing.T) {
//
//         // make and configure a mocked Interface
//         mockedInterface := &InterfaceMock{
//             GetJobFunc: func(ctx context.Context, name string) (store.Job, error) {
// 	               panic("mock out the GetJob method")
//             },
//         }
//
//         // use mockedInterface in code that requires Interface
//         // and then make assertions.
//
//     }
type InterfaceMock struct {
	// GetJobFunc mocks the GetJob method.
	GetJobFunc func(ctx context.Context, name string) (store.Job, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetJob holds details about calls to the GetJob method.
		GetJob []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Name is the name argument value.
			Name string
		}
	}
	lockGetJob sync.RWMutex
}

// GetJob calls GetJobFunc.
func (mock *InterfaceMock) GetJob(ctx context.Context, name string) (store.Job, error) {
	if mock.GetJobFunc == nil {
		panic("InterfaceMock.GetJobFunc: method is nil but Interface.GetJob was just called")
	}
	callInfo := struct {
		Ctx  context.Context
		Name string
	}{
		Ctx:  ctx,
		Name: name,
	}
	mock.lockGetJob.Lock()
	mock.calls.GetJob = append(mock.calls.GetJob, callInfo)
	mock.lockGetJob.Unlock()
	return mock.GetJobFunc(ctx, name)
}

// GetJobCalls gets all the calls that were made to GetJob.
// Check the length with:
//     len(mockedInterface.GetJobCalls())
func (mock *InterfaceMock) GetJobCalls() []struct {
	Ctx  context.Context
	Name string
} {
	var calls []struct {
		Ctx  context.Context
		Name string
	}
	mock.lockGetJob.RLock()
	calls = mock.calls.GetJob
	mock.lockGetJob.RUnlock()
	return calls
}
